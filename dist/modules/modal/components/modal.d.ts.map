{"version":3,"file":"modal.d.ts","sources":["/home/jenya/Projects/ng2-semantic-ui/dist/modules/modal/components/modal.d.ts"],"sourcesContent":["import { OnInit, ElementRef, Renderer2, EventEmitter, ViewContainerRef, AfterViewInit } from \"@angular/core\";\nimport { IDynamicClasses, SuiComponentFactory } from \"../../../misc/util/index\";\nimport { TransitionController } from \"../../transition/index\";\nimport { ModalControls, ModalResult } from \"../classes/modal-controls\";\nimport { ModalConfig, ModalSize } from \"../classes/modal-config\";\nexport declare class SuiModal<T, U> implements OnInit, AfterViewInit {\n    private _renderer;\n    private _element;\n    private _componentFactory;\n    isClosable: boolean;\n    closeResult: U;\n    controls: ModalControls<T, U>;\n    get approve(): ModalResult<T>;\n    get deny(): ModalResult<U>;\n    onApprove: EventEmitter<T>;\n    onDeny: EventEmitter<U>;\n    onDismiss: EventEmitter<void>;\n    private _modalElement;\n    size: ModalSize;\n    private _isFullScreen;\n    get isFullScreen(): boolean;\n    set isFullScreen(fullScreen: boolean);\n    isBasic: boolean;\n    private _mustScroll;\n    private _mustAlwaysScroll;\n    get mustScroll(): boolean;\n    set mustScroll(mustScroll: boolean);\n    private _isInverted;\n    get isInverted(): boolean;\n    set isInverted(inverted: boolean);\n    transitionController: TransitionController;\n    transition: string;\n    transitionDuration: number;\n    dimBackground: boolean;\n    private _isClosing;\n    templateSibling: ViewContainerRef;\n    private _originalContainer?;\n    get dynamicClasses(): IDynamicClasses;\n    constructor(_renderer: Renderer2, _element: ElementRef, _componentFactory: SuiComponentFactory);\n    ngOnInit(): void;\n    ngAfterViewInit(): void;\n    loadConfig<V>(config: ModalConfig<V, T, U>): void;\n    private dismiss;\n    close(): void;\n    private updateScroll;\n    onClick(e: MouseEvent): void;\n    onDocumentKeyUp(e: KeyboardEvent): void;\n    onDocumentResize(): void;\n}\n"],"names":[],"mappings":"AAAA;;;;;;AAKA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2CA;"}